# Introduction

Il arrive que vous ayez besoin de gérer vos propres paquets Debian, soit
parce qu'ils n'existent pas dans les dépôts officiels, soit parce que
vous voulez utiliser les dernières versions amont disponibles tout en
conservant la version stable de Debian. Dans tous les cas de figure, il
est plus simple de faire en sorte que ces paquets soient gérés au
travers d'un dépôt plutôt que de devoir effectuer leur déploiement
manuellement.
Qui plus est, les phases de compilation et de générations des paquets
binaires devraient toujours être automatisées.

Confronté à ce besoin, j'ai donc mis en place une plate-forme de
compilation et génération de paquets. Elle est basée sur Debian Squeeze
et, naturellement, compatible Ubuntu.

## Briques logicielles

À chacune des étapes de la construction d'un paquet, il existe plusieurs
outils possibles. Voici ceux que j'ai choisi:

- `reprepro`: outil de gestion de dépôt de paquets logiciels
- `rebuildd`: service qui va gérer la phase de compilation et de
génération des paquets binaires
- `cowbuilder`: outil qui réalisera, sous le contrôle de rebuildd, la
compilation et la génération des paquets binaires
- `dput`: permettra de gérer le déploiement des paquets source et
binaires vers le dépôts

Les paquets source, de même que les fichiers Release et Packages du
dépôt, seront signés par `gpg`.

Ce choix est pour beaucoup arbitraire. Il repose principalement sur la
documentation que j'ai pu trouver sur le moment, ou encore le fait que
je connaissais l'un ou l'autre outil de nom.

Je n'ai pas la prétention de prétendre les maîtriser parfaitement, ni
même celle d'affirmer qu'ils sont les meilleurs dans leur catégorie.
Je pourrai tout juste expliquer que je suis parvenu à les faire
fonctionner ensemble, et qu'ils répondent à mon besoin actuel.

## Processus

Le principe est simple: il respecte les principales étapes de génération
de paquets binaires sous Debian/Ubuntu, à savoir:

1.  génération du paquet source
1.  ajout du paquet source dans un dépôt
1.  génération du ou des paquets binaires
1.  ajout des paquets binaires au dépôt
1.  diffusion du dépôt

La génération du paquet source est à la charge du responsable du paquet.
Elle est manuelle.

Une fois le paquet source généré et signé par `gpg`, le responsable peut
le télécharger sur le dépôt géré par `reprepro`. L'envoi vers le dépôt
s'effectue à l'aide de `dput`.

L'ajout d'un paquet source (soit un nouveau paquet, soit une mise à
jour) déclenche l'ajout dans `rebuildd` d'une tâche de
compilation/génération du paquet binaire pour chacune des architectures
supportées par le système.

Au démarrage d'une tâche, `rebuildd` va piloter `cowbuilder`. Ce dernier
va créer l'environnement de construction du paquet binaire avec la
distribution et l'architecture cibles. Compilations et génération des
paquets binaires sont donc effectuées de manière automatique, à partir
d'un système minimal, dans un `chroot`. Outre le gain de temps pour
l'administrateur, ceci permet également de s'assurer que les dépendances
sont correctement positionnées.

Une fois les paquets binaires générés sans erreur, ils peuvent être
ajoutés au dépôt.
Là encore, `dput` se charge de placer les fichiers dans le bon
répertoire et d'invoquer `reprepro`.

Il ne reste plus qu'à publier le dépôt sur un serveur web.

Ce rapide tour d'horizon permet de se faire une idée globale de la
plate-forme cible. Ces différentes briques sont relativement faciles à
intégrer modulo, comme nous verrons dans les articles suivants, quelques
astuces à respecter pour que 'tout marche bien navette'.
